<link rel='stylesheet' href='css/views/fullCalendar.css'/>
<script>
    $(document).ready(function () {
        $('#calendar').fullCalendar({
            monthNames: ['{{__ "Month-Name-January"}}', '{{__ "Month-Name-February"}}', '{{__
                    "Month-Name-March"}}', '{{__ "Month-Name-April"}}', '{{__ "Month-Name-May"}}', '{{__
                    "Month-Name-June"}}', '{{__ "Month-Name-July"}}', '{{__ "Month-Name-August"}}', '{{__
                    "Month-Name-September"}}', '{{__ "Month-Name-October"}}', '{{__ "Month-Name-November"}}', '{{__
                    "Month-Name-December"}}'],
            monthNamesShort: ['{{__ "Month-NameShort-January"}}', '{{__ "Month-NameShort-February"}}', '{{__
                    "Month-NameShort-March"}}', '{{__ "Month-NameShort-April"}}', '{{__ "Month-NameShort-May"}}', '{{__
                    "Month-NameShort-June"}}', '{{__ "Month-NameShort-July"}}', '{{__ "Month-NameShort-August"}}', '{{__
                    "Month-NameShort-September"}}', '{{__ "Month-NameShort-October"}}', '{{__
                    "Month-NameShort-November"}}', '{{__ "Month-NameShort-December"}}'],
            dayNames: ['{{__ "Day-Name-Monday"}}', '{{__ "Day-Name-Tuesday"}}', '{{__ "Day-Name-Wednesday"}}', '{{__
                    "Day-Name-Thursday"}}', '{{__ "Day-Name-Friday"}}', '{{__ "Day-Name-Saturday"}}', '{{__
                    "Day-Name-Sunday"}}'],
            dayNamesShort: ['{{__ "Day-NameShort-Monday"}}', '{{__ "Day-NameShort-Tuesday"}}', '{{__
                    "Day-NameShort-Wednesday"}}', '{{__ "Day-NameShort-Thursday"}}', '{{__
                    "Day-NameShort-Friday"}}', '{{__ "Day-NameShort-Saturday"}}', '{{__ "Day-NameShort-Sunday"}}'],
            height: 700,
            header: {
                left: 'addEvent',
                center: 'title',
                right: 'today, prev, next'
            },

            buttonText: {
                today: "{{__ "Calendar-Today-Button"git }}"
            },

            events: '/getUserEvents',

            customButtons: {
                addEvent: {
                    text: $("#newEvent").text(),
                    click: function () {
                        $("#addEventModal").modal('show');
                    }
                }
            },
            timeFormat: "HH:mm",

            eventClick: function (calEvent) {
                $("#viewDescriptionModal").modal("show");
                console.log(JSON.stringify(calEvent.start));
                $("#description").html(calEvent.description);

                //DELETE EVENT MODAL
                $("#deleteEventButton").click(function () {
                    $("#viewDescriptionModal").modal('hide');
                    $("#deleteEventModal").modal('show');
                    $("#confirmDelete").click(function () {
                        deleteEvent(calEvent.id)
                    });
                });
                //DELETE EVENT MODAL END

                //UPDATE EVENT MODAL
                $("#updateEventButton").click(function () {
                    $("#viewDescriptionModal").modal('hide');
                    $("#updateEventModal").modal('show');
                    $("#updateEventTitle").val(calEvent.title);
                    $("#updateEventDescription").val(calEvent.description);
                    $("#updateEventStart").val(calEvent.start.format("YYYY-MM-DD HH:mm"));
                    $("#updateEventEnd").val(calEvent.end.format("YYYY-MM-DD HH:mm"));

                    var participants = "";
                    $.get("/participants/" + calEvent.id).done(function (data) {

                        var dataString = data[0].participants;
                        var allParticipants = [];
                        var temp = dataString.split(" ");


                        $(".updateParticipants").each(function () {
                            var elements = "";
                            $(this).find("a").each(function () {
                                var current = $(this);
                                elements += current.text();
                            });
                            allParticipants.push(elements);
                        });

                        for (var i = 0; i < allParticipants.length; i++) {
                            $(".updateParticipants a").each(function () {
                                if (temp[i] === $(this).text()) {
                                    $(this).find(":checkbox").prop("checked", true);
                                }
                            });
                        }
                    });


                    $("#confirmUpdate").click(function () {
                        $(".updateParticipants a").each(function () {
                            if ($(this).find(":checkbox").prop("checked") === true) {
                                participants += $(this).text() + " ";
                            }
                        });

                        var title = $("#updateEventTitle").val();
                        var description = $("#updateEventDescription").val();
                        var start = $("#updateEventStart").val();
                        var end = $("#updateEventEnd").val();

                        var error;

                        if (start > end) {
                            $("#updateEventAlert").text("{{__ "Calendar-Start-After-End"}}").show();
                            error = true;
                        }
                        if (start == end) {
                            $("#updateEventAlert").text("{{__ "Calendar-Start-Equals-End"}}").show();
                            error = true;
                        }

                        if(start < end){
                            $("#updateEventAlert").hide();
                        }

                        if($("#updateEventTitle").val().length === 0) {
                            $(".updateEventTitleDiv").addClass("has-error");
                            $("#updateTitleErrorToggle").addClass("glyphicon-remove");
                            error = true
                        }else{
                            $(".updateEventTitleDiv").addClass("has-success").removeClass("has-error");
                            $("#updateTitleErrorToggle").addClass("glyphicon-ok").removeClass("glyphicon-remove");
                        }

                        if($("#updateEventDescription").val().length === 0) {
                            $(".updateEventDescriptionDiv").addClass("has-error");
                            $("#updateDescriptionErrorToggle").addClass("glyphicon-remove");
                            error = true
                        }else{
                            $(".updateEventDescriptionDiv").addClass("has-success").removeClass("has-error");
                            $("#updateDescriptionErrorToggle").addClass("glyphicon-ok").removeClass("glyphicon-remove");
                        }

                        if(!error) {
                            updateEvent(title, description, start, end, calEvent.id, participants);
                            window.location.reload(true);
                        }
                    })
                });
                //UPDATE EVENT MODAL END
            },

            editable: true,
            eventDrop: function (event) {
                var start = event.start.format("YYYY-MM-DD HH:mm");
                var end = event.end.format("YYYY-MM-DD HH:mm") || start;
                updateDate(event.id, start, end);
            }
        });

        $("#eventStartCalendarGlyph, #eventEndCalendarGlyph, #updateEventStartCalendarGlyph, #updateEventEndCalendarGlyph, #updateEventStart, #updateEventEnd, #eventStart, #eventEnd").datetimepicker({
            format: "YYYY-MM-DD HH:mm"
        });


        var table = $("#calendarEventList").DataTable({
            ajax: {
                dataSrc: "",
                url: '/events'
            },

            scrollY: "200px",
            bScrollCollapse: true,
            bPaginate: false,
            searching: false,
            info: false,
            lengthChange: false,
            columns: [
                {data: "firstname", title: '{{__ "Event-Table-Name"}}'},
                {data: "title", title: '{{__ "Event-Table-Title"}}'},
                {data: "start", title: '{{__ "Event-Table-Start"}}'},
                {data: "end", title: '{{__ "Event-Table-End"}}'}
            ]
        });

        $('#calendarEventList tbody').on('click', 'tr', function () {

            if ($(this).hasClass('selected')) {
                $(this).removeClass('selected');
            }
            else {
                var data = table.row(this).data();
                $("#showDescriptionModal").modal("show");
                $("#eventDescription").text(data.description);
                $("#eventParticipants").text(data.participants);
                table.$('tr.selected').removeClass('selected');
                $(this).addClass('selected');
            }
        });

        $.get("/users", function (data) {
            for (var i = 0; i < data.length; i++) {
                var user = data[i].firstname;
                $("#participantsList").append('<li class="participants"><a href="#" class="small">' + '<input type="checkbox"/>' + user + '</a>' + '</li>');
                $("#updateParticipantsList").append('<li class="updateParticipants"><a href="#" class="small">' + '<input type="checkbox"/>' + user + '</a>' + '</li>');
            }
        });

        $("#participantsListButton, #updateParticipantsListButton").click(function () {
            selectParticipants();
        });
    });


    var participants = [];
    function selectParticipants() {

        $('.participants a, .updateParticipants a').on('click', function () {

            var current = $(this).parent().find(":checkbox");
            if (!current.prop("checked")) {
                current.prop("checked", true);
                participants.push($(this).text());
            } else {
                current.prop("checked", false);
                participants.pop($(this).text());
            }
            return false;
        });
    }

    function addEvent() {

        var temp = [];
        for (var i = 0; i < participants.length; i++) {
            temp += participants[i] + " ";
        }
        var title = $("#eventTitle").val();
        var description = $("#eventDescription").val();
        var start = $("#eventStart").val();
        var end = $("#eventEnd").val();

        var error;

        if (start > end) {
            $("#addEventAlert").text("{{__ "Calendar-Start-After-End"}}").show();
            error = true;
        }
        if (start == end) {
            $("#addEventAlert").text("{{__ "Calendar-Start-Equals-End"}}").show();
            error = true;
        }

        if(start < end){
            $("#addEventAlert").hide();
        }

        if($("#eventTitle").val().length === 0) {
            $(".eventTitleDiv").addClass("has-error");
            $("#titleErrorToggle").addClass("glyphicon-remove");
            error = true
        }else{
            $(".eventTitleDiv").addClass("has-success").removeClass("has-error");
            $("#titleErrorToggle").addClass("glyphicon-ok").removeClass("glyphicon-remove");
        }

        if($("#eventDescription").val().length === 0) {
            $(".eventDescriptionDiv").addClass("has-error");
            $("#descriptionErrorToggle").addClass("glyphicon-remove");
            error = true
        }else{
            $(".eventDescriptionDiv").addClass("has-success").removeClass("has-error");
            $("#descriptionErrorToggle").addClass("glyphicon-ok").removeClass("glyphicon-remove");
        }

        if(!error) {
            $.post("/events", {
                title: title,
                start: start,
                end: end,
                description: description,
                participants: temp
            });
            window.location.reload(true);
        }
    }

    function deleteEvent(eventId) {
        $.ajax({
            url: "/events/" + eventId,
            type: 'DELETE'
        });
        window.location.reload(true);
    }

    function updateEvent(title, description, start, end, id, participants) {
        $.ajax({
            url: "/events/" + id,
            type: 'PUT',
            data: {
                title: title,
                description: description,
                start: start,
                end: end,
                participants: participants
            }
        });
        window.location.reload(true);
    }

    function updateDate(id, start, end) {
        $.post("/updateDate", {
            id: id,
            start: start,
            end: end
        });
        window.location.reload(true);
    }
</script>